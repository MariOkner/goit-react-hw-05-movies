{"version":3,"file":"static/js/294.bdd6cf33.chunk.js","mappings":"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","sources":["helpers.js","components/MoviesComponents/MovieList.styled.js","components/MoviesComponents/MovieList.jsx","components/MoviesComponents/SearchBox.styled.js","components/MoviesComponents/SearchBox.jsx","pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst MOVIES_BASE_URL = 'https://api.themoviedb.org/3';\nconst MOVIES_KEY = '99c2fb450b803b86448378b118c18b64';\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p';\nconst MOVIE_IMG_SIZE = 'w342';\nconst CAST_IMG_SIZE = 'w154';\n\nconst fetchTrending = async abortSignal => {\n  const urlTrending = `${MOVIES_BASE_URL}/trending/movie/day?api_key=${MOVIES_KEY}`;\n\n  try {\n    const response = await axios.get(urlTrending, {\n      signal: abortSignal,\n    });\n\n    return response.data.results.map(({ id, title, poster_path }) => {\n      return {\n        id: id,\n        title: title,\n        posterURL: poster_path\n          ? `${IMG_BASE_URL}/${MOVIE_IMG_SIZE}${poster_path}`\n          : null,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchMovies = async (query, abortSignal) => {\n  const urlMovies = `${MOVIES_BASE_URL}/search/movie?api_key=${MOVIES_KEY}&query=${query}&include_adult=true`;\n\n  try {\n    const response = await axios.get(urlMovies, {\n      signal: abortSignal,\n    });\n\n    return response.data.results.map(({ id, title, poster_path }) => {\n      return {\n        id: id,\n        title: title,\n        posterURL: poster_path\n          ? `${IMG_BASE_URL}/${MOVIE_IMG_SIZE}${poster_path}`\n          : null,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchDetails = async (id, abortSignal) => {\n  const urlDetails = `${MOVIES_BASE_URL}/movie/${id}?api_key=${MOVIES_KEY}&language=en-US`;\n\n  try {\n    const response = await axios.get(urlDetails, {\n      signal: abortSignal,\n    });\n\n    const { poster_path, original_title, vote_average, overview, genres } =\n      response.data;\n\n    return {\n      posterURL: poster_path\n        ? `${IMG_BASE_URL}/${MOVIE_IMG_SIZE}${poster_path}`\n        : null,\n      title: original_title,\n      userScore: vote_average * 10,\n      overview: overview,\n      genres: genres,\n    };\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchCast = async (id, abortSignal) => {\n  const urlCast = `${MOVIES_BASE_URL}/movie/${id}/credits?api_key=${MOVIES_KEY}&language=en-US`;\n  try {\n    const response = await axios.get(urlCast, {\n      signal: abortSignal,\n    });\n\n    return response.data.cast.map(({ id, name, character, profile_path }) => {\n      return {\n        id: id,\n        name: name,\n        character: character,\n        profileURL: profile_path\n          ? `${IMG_BASE_URL}/${CAST_IMG_SIZE}${profile_path}`\n          : null,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchReviews = async (id, abortSignal) => {\n  const urlReviews = `${MOVIES_BASE_URL}/movie/${id}/reviews?api_key=${MOVIES_KEY}&language=en-US`;\n\n  try {\n    const response = await axios.get(urlReviews, {\n      signal: abortSignal,\n    });\n\n    return response.data.results.map(({ id, author, content }) => {\n      return {\n        id: id,\n        author: author,\n        content: content,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst helpers = {\n  fetchTrending,\n  fetchMovies,\n  fetchDetails,\n  fetchCast,\n  fetchReviews,\n};\nexport default helpers;\n\n// https://image.tmdb.org/t/p/w154null\n// https://image.tmdb.org/t/p/w154/m2lUTpivduEiRwyPIrdg8hcI8zq.jpg\"\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieListHTML = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, auto));\n  grid-gap: 15px;\n\n  padding: 0;\n\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItemHTML = styled.li`\n  /* width: 100%; */\n  /* height: 569px; */\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Link = styled(NavLink)`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  align-items: center;\n\n  color: #000000;\n  text-decoration: none;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const MoviePosterImgHTML = styled.img`\n  width: 100%;\n  /* height: 100%; */\n  object-fit: cover;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const MovieTitleHTML = styled.h3`\n  padding: 10px;\n  font-size: 16px;\n  white-space: normal;\n\n  text-transform: uppercase;\n`;\n","import { useLocation } from 'react-router-dom';\nimport NoPoster from '../../images/no_poster.jpg';\nimport {\n  MovieListHTML,\n  MovieItemHTML,\n  Link,\n  MoviePosterImgHTML,\n  MovieTitleHTML,\n} from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <MovieListHTML>\n        {movies.map(({ id, title, posterURL }) => (\n          <MovieItemHTML key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              <MoviePosterImgHTML src={posterURL || NoPoster} alt=\"\" />\n              <MovieTitleHTML>{title}</MovieTitleHTML>\n            </Link>\n          </MovieItemHTML>\n        ))}\n      </MovieListHTML>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const BoxHTML = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin: 16px 10px 16px 0;\n`;\n\nexport const TitleSearchHTML = styled.h3`\n  margin-right: 10px;\n  color: orangered;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { BoxHTML, TitleSearchHTML, Icon, Input } from './SearchBox.styled';\n\nexport const SearchBox = ({ query, onChange }) => {\n  return (\n    <BoxHTML>\n      <TitleSearchHTML> Search field </TitleSearchHTML>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={query}\n        onChange={e => onChange(e.target.value)}\n      />\n    </BoxHTML>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ErrorHTML = styled.h3`\n  text-align: center;\n`;\n","import helpers from 'helpers';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieList } from '../components/MoviesComponents/MovieList';\nimport { SearchBox } from '../components/MoviesComponents/SearchBox';\n\nimport { ErrorHTML } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    if (!query) return;\n\n    fetchMovies(query, abortController.signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [query]);\n\n  const fetchMovies = async (query, abortSignal) => {\n    try {\n      const movies = await helpers.fetchMovies(query, abortSignal);\n\n      if (!movies.length) {\n        throw new Error('No movies');\n      }\n\n      setMovies(movies);\n      setError(null);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const handleQueryUpdate = query => {\n    setSearchParams(query.trim() !== '' ? { query } : {});\n    setMovies([]);\n  };\n\n  return (\n    <section>\n      <SearchBox query={query} onChange={handleQueryUpdate} />\n\n      {error ? <ErrorHTML>{error}</ErrorHTML> : <MovieList movies={movies} />}\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["MOVIES_BASE_URL","MOVIES_KEY","IMG_BASE_URL","MOVIE_IMG_SIZE","fetchTrending","abortSignal","urlTrending","axios","signal","response","data","results","map","id","title","poster_path","posterURL","Error","fetchMovies","query","urlMovies","fetchDetails","urlDetails","original_title","vote_average","overview","genres","userScore","fetchCast","urlCast","cast","name","character","profile_path","profileURL","fetchReviews","urlReviews","author","content","helpers","MovieListHTML","styled","MovieItemHTML","Link","NavLink","MoviePosterImgHTML","MovieTitleHTML","MovieList","movies","location","useLocation","to","state","from","src","NoPoster","alt","BoxHTML","TitleSearchHTML","Input","Icon","HiSearch","SearchBox","onChange","type","value","e","target","ErrorHTML","useState","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","abortController","AbortController","abort","length","message","trim"],"sourceRoot":""}