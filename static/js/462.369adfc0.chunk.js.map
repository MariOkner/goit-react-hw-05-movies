{"version":3,"file":"static/js/462.369adfc0.chunk.js","mappings":"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","sources":["helpers.js","components/HomeComponents/TrendingList.styled.js","components/HomeComponents/TrendingList.jsx","pages/Home.styled.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst MOVIES_BASE_URL = 'https://api.themoviedb.org/3';\nconst MOVIES_KEY = '99c2fb450b803b86448378b118c18b64';\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p';\nconst MOVIE_IMG_SIZE = 'w342';\nconst CAST_IMG_SIZE = 'w154';\n\nconst fetchTrending = async abortSignal => {\n  const urlTrending = `${MOVIES_BASE_URL}/trending/movie/day?api_key=${MOVIES_KEY}`;\n\n  try {\n    const response = await axios.get(urlTrending, {\n      signal: abortSignal,\n    });\n\n    return response.data.results.map(({ id, title, poster_path }) => {\n      return {\n        id: id,\n        title: title,\n        posterURL: poster_path\n          ? `${IMG_BASE_URL}/${MOVIE_IMG_SIZE}${poster_path}`\n          : null,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchMovies = async (query, abortSignal) => {\n  const urlMovies = `${MOVIES_BASE_URL}/search/movie?api_key=${MOVIES_KEY}&query=${query}&include_adult=true`;\n\n  try {\n    const response = await axios.get(urlMovies, {\n      signal: abortSignal,\n    });\n\n    return response.data.results.map(({ id, title, poster_path }) => {\n      return {\n        id: id,\n        title: title,\n        posterURL: poster_path\n          ? `${IMG_BASE_URL}/${MOVIE_IMG_SIZE}${poster_path}`\n          : null,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchDetails = async (id, abortSignal) => {\n  const urlDetails = `${MOVIES_BASE_URL}/movie/${id}?api_key=${MOVIES_KEY}&language=en-US`;\n\n  try {\n    const response = await axios.get(urlDetails, {\n      signal: abortSignal,\n    });\n\n    const { poster_path, original_title, vote_average, overview, genres } =\n      response.data;\n\n    return {\n      posterURL: poster_path\n        ? `${IMG_BASE_URL}/${MOVIE_IMG_SIZE}${poster_path}`\n        : null,\n      title: original_title,\n      userScore: vote_average * 10,\n      overview: overview,\n      genres: genres,\n    };\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchCast = async (id, abortSignal) => {\n  const urlCast = `${MOVIES_BASE_URL}/movie/${id}/credits?api_key=${MOVIES_KEY}&language=en-US`;\n  try {\n    const response = await axios.get(urlCast, {\n      signal: abortSignal,\n    });\n\n    return response.data.cast.map(({ id, name, character, profile_path }) => {\n      return {\n        id: id,\n        name: name,\n        character: character,\n        profileURL: profile_path\n          ? `${IMG_BASE_URL}/${CAST_IMG_SIZE}${profile_path}`\n          : null,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchReviews = async (id, abortSignal) => {\n  const urlReviews = `${MOVIES_BASE_URL}/movie/${id}/reviews?api_key=${MOVIES_KEY}&language=en-US`;\n\n  try {\n    const response = await axios.get(urlReviews, {\n      signal: abortSignal,\n    });\n\n    return response.data.results.map(({ id, author, content }) => {\n      return {\n        id: id,\n        author: author,\n        content: content,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst helpers = {\n  fetchTrending,\n  fetchMovies,\n  fetchDetails,\n  fetchCast,\n  fetchReviews,\n};\nexport default helpers;\n\n// https://image.tmdb.org/t/p/w154null\n// https://image.tmdb.org/t/p/w154/m2lUTpivduEiRwyPIrdg8hcI8zq.jpg\"\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const TrendingListHTML = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, auto));\n  grid-gap: 15px;\n\n  padding: 0;\n\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const TrendingItemHTML = styled.li`\n  /* width: 100%; */\n  /* height: 569px; */\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Link = styled(NavLink)`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  align-items: center;\n\n  color: black;\n  text-decoration: none;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const TrendingPosterImgHTML = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const TrendingTitleHTML = styled.h3`\n  padding: 10px;\n\n  white-space: normal;\n\n  text-transform: uppercase;\n`;\n","import NoPoster from '../../images/no_poster.jpg';\nimport {\n  TrendingListHTML,\n  TrendingItemHTML,\n  Link,\n  TrendingPosterImgHTML,\n  TrendingTitleHTML,\n} from './TrendingList.styled';\n\nexport const TrendingList = ({ trendings }) => {\n  return (\n    <div>\n      <TrendingListHTML>\n        {trendings.map(({ id, title, posterURL }) => (\n          <TrendingItemHTML key={id}>\n            <Link to={`movies/${id}`}>\n              <TrendingPosterImgHTML src={posterURL || NoPoster} alt=\"\" />\n              <TrendingTitleHTML>{title}</TrendingTitleHTML>\n            </Link>\n          </TrendingItemHTML>\n        ))}\n      </TrendingListHTML>\n    </div>\n  );\n};\n\n// state={{ from: location }}\n","import styled from 'styled-components';\n\nexport const TodayTitleHTML = styled.h2`\n  height: 110px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 25px;\n  text-transform: uppercase;\n\n  color: #000000;\n  background-image: repeating-linear-gradient(\n    -45deg,\n    #f6ba52,\n    #f6ba52 10px,\n    #ffd180 10px,\n    #ffd180 20px\n  );\n`;\n\nexport const ErrorHTML = styled.h3`\n  text-align: center;\n`;\n","import helpers from 'helpers';\nimport { useState, useEffect } from 'react';\nimport { TrendingList } from '../components/HomeComponents/TrendingList';\n\nimport { TodayTitleHTML, ErrorHTML } from './Home.styled';\n\nconst Home = () => {\n  const [trendings, setTrendings] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    fetchTrending(abortController.signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  const fetchTrending = async abortSignal => {\n    try {\n      const trendings = await helpers.fetchTrending(abortSignal);\n      setTrendings(trendings);\n\n      setError(null);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <section>\n      <TodayTitleHTML>Trending today</TodayTitleHTML>\n\n      {error ? (\n        <ErrorHTML>{error}</ErrorHTML>\n      ) : (\n        <TrendingList trendings={trendings} />\n      )}\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["MOVIES_BASE_URL","MOVIES_KEY","IMG_BASE_URL","MOVIE_IMG_SIZE","fetchTrending","abortSignal","urlTrending","axios","signal","response","data","results","map","id","title","poster_path","posterURL","Error","fetchMovies","query","urlMovies","fetchDetails","urlDetails","original_title","vote_average","overview","genres","userScore","fetchCast","urlCast","cast","name","character","profile_path","profileURL","fetchReviews","urlReviews","author","content","helpers","TrendingListHTML","styled","TrendingItemHTML","Link","NavLink","TrendingPosterImgHTML","TrendingTitleHTML","TrendingList","trendings","to","src","NoPoster","alt","TodayTitleHTML","ErrorHTML","useState","setTrendings","error","setError","useEffect","abortController","AbortController","abort","message"],"sourceRoot":""}