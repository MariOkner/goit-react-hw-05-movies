{"version":3,"file":"static/js/141.112bceb5.chunk.js","mappings":"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","sources":["components/MoviesDetailsComponents/Cast.styled.js","components/MoviesDetailsComponents/Cast.jsx","helpers.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorHTML = styled.h3`\n  text-align: center;\n`;\n\nexport const CastListHTML = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 180px);\n  gap: 10px;\n`;\n\nexport const CastItemHTML = styled.li`\n  list-style-type: none;\n`;\n\nexport const TitleHTML = styled.h2`\n  padding-bottom: 6px;\n  font-size: 18px;\n  text-decoration: none;\n`;\n","import helpers from 'helpers';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport NoPhoto from '../../images/NO.jpg';\n\nimport {\n  ErrorHTML,\n  CastListHTML,\n  CastItemHTML,\n  TitleHTML,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    fetchCast(id, abortController.signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [id]);\n\n  const fetchCast = async (id, abortSignal) => {\n    try {\n      const cast = await helpers.fetchCast(id, abortSignal);\n      setCast(cast);\n\n      setError(null);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return cast && cast.length > 0 ? (\n    <section>\n      {error && <ErrorHTML>{error}</ErrorHTML>}\n      <CastListHTML>\n        {cast.map(({ id, name, character, profileURL }) => (\n          <CastItemHTML key={id}>\n            <img src={profileURL || NoPhoto} alt=\"\" />\n\n            <div>\n              <TitleHTML>{name}</TitleHTML>\n              <p>{character}</p>\n            </div>\n          </CastItemHTML>\n        ))}\n      </CastListHTML>\n    </section>\n  ) : (\n    \"We don't have informations\"\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst MOVIES_BASE_URL = 'https://api.themoviedb.org/3';\nconst MOVIES_KEY = '99c2fb450b803b86448378b118c18b64';\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p';\nconst MOVIE_IMG_SIZE = 'w342';\nconst CAST_IMG_SIZE = 'w154';\n\nconst fetchTrending = async abortSignal => {\n  const urlTrending = `${MOVIES_BASE_URL}/trending/movie/day?api_key=${MOVIES_KEY}`;\n\n  try {\n    const response = await axios.get(urlTrending, {\n      signal: abortSignal,\n    });\n\n    return response.data.results.map(({ id, title, poster_path }) => {\n      return {\n        id: id,\n        title: title,\n        posterURL: poster_path\n          ? `${IMG_BASE_URL}/${MOVIE_IMG_SIZE}${poster_path}`\n          : null,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchMovies = async (query, abortSignal) => {\n  const urlMovies = `${MOVIES_BASE_URL}/search/movie?api_key=${MOVIES_KEY}&query=${query}&include_adult=true`;\n\n  try {\n    const response = await axios.get(urlMovies, {\n      signal: abortSignal,\n    });\n\n    return response.data.results.map(({ id, title, poster_path }) => {\n      return {\n        id: id,\n        title: title,\n        posterURL: poster_path\n          ? `${IMG_BASE_URL}/${MOVIE_IMG_SIZE}${poster_path}`\n          : null,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchDetails = async (id, abortSignal) => {\n  const urlDetails = `${MOVIES_BASE_URL}/movie/${id}?api_key=${MOVIES_KEY}&language=en-US`;\n\n  try {\n    const response = await axios.get(urlDetails, {\n      signal: abortSignal,\n    });\n\n    const { poster_path, original_title, vote_average, overview, genres } =\n      response.data;\n\n    return {\n      posterURL: poster_path\n        ? `${IMG_BASE_URL}/${MOVIE_IMG_SIZE}${poster_path}`\n        : null,\n      title: original_title,\n      userScore: vote_average * 10,\n      overview: overview,\n      genres: genres,\n    };\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchCast = async (id, abortSignal) => {\n  const urlCast = `${MOVIES_BASE_URL}/movie/${id}/credits?api_key=${MOVIES_KEY}&language=en-US`;\n  try {\n    const response = await axios.get(urlCast, {\n      signal: abortSignal,\n    });\n\n    return response.data.cast.map(({ id, name, character, profile_path }) => {\n      return {\n        id: id,\n        name: name,\n        character: character,\n        profileURL: profile_path\n          ? `${IMG_BASE_URL}/${CAST_IMG_SIZE}${profile_path}`\n          : null,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst fetchReviews = async (id, abortSignal) => {\n  const urlReviews = `${MOVIES_BASE_URL}/movie/${id}/reviews?api_key=${MOVIES_KEY}&language=en-US`;\n\n  try {\n    const response = await axios.get(urlReviews, {\n      signal: abortSignal,\n    });\n\n    return response.data.results.map(({ id, author, content }) => {\n      return {\n        id: id,\n        author: author,\n        content: content,\n      };\n    });\n  } catch (error) {\n    throw new Error('Backend error');\n  }\n};\n\nconst helpers = {\n  fetchTrending,\n  fetchMovies,\n  fetchDetails,\n  fetchCast,\n  fetchReviews,\n};\nexport default helpers;\n\n// https://image.tmdb.org/t/p/w154null\n// https://image.tmdb.org/t/p/w154/m2lUTpivduEiRwyPIrdg8hcI8zq.jpg\"\n"],"names":["ErrorHTML","styled","CastListHTML","CastItemHTML","TitleHTML","useState","cast","setCast","error","setError","id","useParams","useEffect","abortController","AbortController","fetchCast","signal","abort","abortSignal","helpers","message","length","map","name","character","profileURL","src","NoPhoto","alt","MOVIES_BASE_URL","MOVIES_KEY","IMG_BASE_URL","MOVIE_IMG_SIZE","fetchTrending","urlTrending","axios","response","data","results","title","poster_path","posterURL","Error","fetchMovies","query","urlMovies","fetchDetails","urlDetails","original_title","vote_average","overview","genres","userScore","urlCast","profile_path","fetchReviews","urlReviews","author","content"],"sourceRoot":""}